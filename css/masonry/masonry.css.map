{"version":3,"sources":["masonry/masonry.scss","masonry/masonry.css","mixins/_breakpoints.scss"],"names":[],"mappings":"AAEA,mBACI,yCCDJ,CCqEQ,yBFrER,mBAIQ,mDAAA,CACA,oDAAA,CACA,mCCAN,CACF,CC8DQ,yBFrER,mBAUQ,mCCCN,CACF,CCyDQ,yBFrER,mBAeQ,gHAAA,CACA,iHAAA,CAFA,mCCIN,CACF,CCkDQ,0BFrER,mBAqBQ,gHAAA,CACA,iHAAA,CAFA,mCCKN,CACF,CDAA,SACI,gBAAA,CACA,kDAAA,CACA,UCGJ,CCqCQ,yBF3CR,SAMQ,yCAAA,CACA,gDAAA,CACA,SCIN,CACF,CC8BQ,yBF3CR,SAYQ,cCKN,CACF,CCyBQ,0BF3CR,SAgBQ,0CAAA,CACA,SCMN,CACF,CDHA,eACI,kCAAA,CACA,0BCMJ,CDJI,qBACI,iCCMR,CDHI,oCAEI,2CAAA,CACA,8CAAA,CACA,gBAAA,CACA,qDCKR,CCIQ,yBFdJ,oCAQQ,2CCOV,CACF,CCFQ,0BFdJ,oCAYQ,+BCSV,CACF,CDLA,eACI,QAAA,CACA,QAAA,CACA,cAAA,CACA,eAAA,CACA,eAAA,CACA,iBCQJ,CDNI,mBACI,eAAA,CACA,WAAA,CACA,iBAAA,CACA,KAAA,CACA,UCQR,CDJA,cACI,8ECOJ,CDJA,iCACI,sHCOJ,CDFI,wDACI,uBAAA,CACA,mCCMR,CDHI,wDACI,iECMR,CDCI,8DAHI,mCCWR,CDRI,8BACI,oDCOR,CDJQ,0CACI,oDAAA,CACA,oBCOZ,CDAI,0DACI,yBAAA,CACA,uBCIR,CDDI,0DACI,mECIR,CDDI,kCACI,gCCIR,CDDI,gCACI,kDAAA,CACA,iCCIR,CDFQ,4CACI,kDAAA,CACA,kBCKZ,CDEI,6FACI,mDCER,CDCI,qEACI,4BAAA,CACA,uBAAA,CACA,2BAAA,CACA,oBAAA,CACA,eAAA,CACA,kBAAA,CACA,iBAAA,CACA,SCER,CChGQ,yBFsFJ,qEAWQ,gBCIV,CACF,CDDI,yDACI,iBAAA,CACA,SCIR,CDCI,kCACI,wcCER,CDGI,mCACI,ydCAR","file":"masonry/masonry.css","sourcesContent":["@import \"../mixins/breakpoints\";\n\n.masonry-container {\n    margin: 0 0 var(--paragraph-margin-bottom);\n\n    @include media-breakpoint-up(sm) {\n        margin-left: calc(var(--paragraph-margin-bottom) / -2);\n        margin-right: calc(var(--paragraph-margin-bottom) / -2);\n        max-width: var(--container-sm-width);\n    }\n\n    @include media-breakpoint-up(md) {\n        max-width: var(--container-md-width);\n    }\n\n    @include media-breakpoint-up(lg) {\n        max-width: var(--container-lg-width);\n        margin-left: calc(((var(--container-lg-width) - var(--container-md-width)) / -2) - var(--paragraph-margin-bottom) / 2);\n        margin-right: calc(((var(--container-lg-width) - var(--container-md-width)) / -2) - var(--paragraph-margin-bottom) / 2);\n    }\n\n    @include media-breakpoint-up(xl) {\n        max-width: var(--container-xl-width);\n        margin-left: calc(((var(--container-xl-width) - var(--container-md-width)) / -2) - var(--paragraph-margin-bottom) / 2);\n        margin-right: calc(((var(--container-xl-width) - var(--container-md-width)) / -2) - var(--paragraph-margin-bottom) / 2);\n    }\n}\n\n.masonry {\n    line-height: 1.75;\n    padding: calc(var(--paragraph-margin-bottom) * 0.25) 0;\n    width: 100%;\n\n    @include media-breakpoint-up(sm) {\n        font-size: calc(var(--base-font-size) * .75);\n        padding: calc(var(--paragraph-margin-bottom) * 0.25);\n        width: 50%;\n    }\n\n    @include media-breakpoint-up(lg) {\n        width: 33.3333%;\n    }\n\n    @include media-breakpoint-up(xl) {\n        font-size: calc(var(--base-font-size) * .625);\n        width: 25%;\n    }\n}\n\n.masonry-inner {\n    box-shadow: var(--box-shadow-light);\n    transition: all .25s linear;\n\n    &:hover {\n        box-shadow: var(--box-shadow-dark);\n    }\n\n    h2,\n    h3 {\n        font-size: calc(var(--base-font-size) * 1.375);\n        letter-spacing: calc(var(--base-font-size) / -50);\n        line-height: 1.25;\n        margin-bottom: calc(var(--paragraph-margin-bottom) * 0.5);\n\n        @include media-breakpoint-up(sm) {\n            font-size: calc(var(--base-font-size) * 1.125);\n        }\n\n        @include media-breakpoint-up(xl) {\n            font-size: var(--base-font-size);\n        }\n    }\n}\n\n.masonry-image {\n    height: 0;\n    margin: 0;\n    max-width: 100%;\n    overflow: hidden;\n    padding-top: 50%;\n    position: relative;\n\n    img {\n        box-shadow: none;\n        height: 100%;\n        position: absolute;\n        top: 0;\n        width: 100%;\n    }\n}\n\n.masonry-body {\n    padding: var(--paragraph-margin-bottom) calc(var(--paragraph-margin-bottom) * 0.5);\n}\n\n.masonry-has-image .masonry-body {\n    padding: calc(var(--paragraph-margin-bottom) * 0.5) calc(var(--paragraph-margin-bottom) * 0.5) var(--paragraph-margin-bottom);\n}\n\n.plain-black,\n.flora-black {\n    .masonry-inner {\n        background: var(--black);\n        color: rgba(var(--primary-rgb), .625);\n    }\n\n    .masonry-image {\n        border: calc(var(--paragraph-margin-bottom) * 0.5) solid var(--black);\n    }\n\n    h3 {\n        color: rgba(var(--primary-rgb), .875);\n    }\n\n    a {\n        border-bottom: 2px solid rgba(var(--primary-rgb), .25);\n        color: rgba(var(--primary-rgb), .875);\n\n        &:hover {\n            border-bottom: 2px solid rgba(var(--primary-rgb), .75);\n            color: var(--primary);\n        }\n    }\n}\n\n.plain-yellow,\n.flora-yellow {\n    .masonry-inner {\n        background: var(--primary);\n        color: var(--body-color);\n    }\n\n    .masonry-image {\n        border: calc(var(--paragraph-margin-bottom) * 0.5) solid var(--primary);\n    }\n\n    h3 {\n        color: rgba(var(--black-rgb), .75);\n    }\n\n    a {\n        border-bottom: 2px solid rgba(var(--black-rgb), .25);\n        color: rgba(var(--black-rgb), .875);\n\n        &:hover {\n            border-bottom: 2px solid rgba(var(--black-rgb), .75);\n            color: var(--black);\n        }\n    }\n}\n\n.flora-black,\n.flora-yellow { \n    &.masonry-has-image .masonry-inner {\n        padding-top: calc(var(--paragraph-margin-bottom) * 0.5);\n    }\n    \n    .masonry-flora-crown {\n        background-color: transparent;\n        background-position: top center;\n        background-repeat: no-repeat;\n        background-size: 100%;\n        box-shadow: none;\n        padding-top: 1.5rem;\n        position: relative;\n        z-index: 2;\n\n        @include media-breakpoint-up(sm) {\n            padding-top: 1rem;\n        }\n    }\n\n    .masonry-inner {\n        position: relative;\n        z-index: 1;\n    }\n}\n\n.flora-black {\n    .masonry-flora-crown {\n        background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' fill='%23000000' x='0px' y='0px' viewBox='0 0 288 18.68' style='enable-background:new 0 0 288 18.68;' xml:space='preserve'%3E%3Cpolygon points='0,18.68 0,10.65 13.96,10.65 17.28,7.26 20.04,10.65 34.56,10.65 34.56,17.53 69.12,17.53 69.12,10.65 83.08,10.65 86.4,7.26 89.16,10.65 103.68,10.65 126.72,5.56 126.72,3.39 140.68,3.39 144,0 146.76,3.39 161.28,3.39 161.28,5.56 184.32,10.65 198.28,10.65 201.6,7.26 204.35,10.65 218.88,10.65 218.88,17.53 253.44,17.53 253.44,10.65 267.4,10.65 270.72,7.26 273.47,10.65 288,10.65 288,18.68 '/%3E%3C/svg%3E\");\n    }\n}\n\n.flora-yellow {\n    .masonry-flora-crown {\n        background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' fill='%23fce409' x='0px' y='0px' viewBox='0 0 288 18.68' style='enable-background:new 0 0 288 18.68;' xml:space='preserve'%3E%3Cpolygon points='0,18.68 0,10.65 13.96,10.65 17.28,7.26 20.04,10.65 34.56,10.65 34.56,17.53 69.12,17.53 69.12,10.65 83.08,10.65 86.4,7.26 89.16,10.65 103.68,10.65 126.72,5.56 126.72,3.39 140.68,3.39 144,0 146.76,3.39 161.28,3.39 161.28,5.56 184.32,10.65 198.28,10.65 201.6,7.26 204.35,10.65 218.88,10.65 218.88,17.53 253.44,17.53 253.44,10.65 267.4,10.65 270.72,7.26 273.47,10.65 288,10.65 288,18.68 '/%3E%3C/svg%3E\");\n    }\n}",".masonry-container {\n  margin: 0 0 var(--paragraph-margin-bottom);\n}\n@media (min-width: 576px) {\n  .masonry-container {\n    margin-left: calc(var(--paragraph-margin-bottom) / -2);\n    margin-right: calc(var(--paragraph-margin-bottom) / -2);\n    max-width: var(--container-sm-width);\n  }\n}\n@media (min-width: 768px) {\n  .masonry-container {\n    max-width: var(--container-md-width);\n  }\n}\n@media (min-width: 992px) {\n  .masonry-container {\n    max-width: var(--container-lg-width);\n    margin-left: calc(((var(--container-lg-width) - var(--container-md-width)) / -2) - var(--paragraph-margin-bottom) / 2);\n    margin-right: calc(((var(--container-lg-width) - var(--container-md-width)) / -2) - var(--paragraph-margin-bottom) / 2);\n  }\n}\n@media (min-width: 1200px) {\n  .masonry-container {\n    max-width: var(--container-xl-width);\n    margin-left: calc(((var(--container-xl-width) - var(--container-md-width)) / -2) - var(--paragraph-margin-bottom) / 2);\n    margin-right: calc(((var(--container-xl-width) - var(--container-md-width)) / -2) - var(--paragraph-margin-bottom) / 2);\n  }\n}\n\n.masonry {\n  line-height: 1.75;\n  padding: calc(var(--paragraph-margin-bottom) * 0.25) 0;\n  width: 100%;\n}\n@media (min-width: 576px) {\n  .masonry {\n    font-size: calc(var(--base-font-size) * .75);\n    padding: calc(var(--paragraph-margin-bottom) * 0.25);\n    width: 50%;\n  }\n}\n@media (min-width: 992px) {\n  .masonry {\n    width: 33.3333%;\n  }\n}\n@media (min-width: 1200px) {\n  .masonry {\n    font-size: calc(var(--base-font-size) * .625);\n    width: 25%;\n  }\n}\n\n.masonry-inner {\n  box-shadow: var(--box-shadow-light);\n  transition: all 0.25s linear;\n}\n.masonry-inner:hover {\n  box-shadow: var(--box-shadow-dark);\n}\n.masonry-inner h2,\n.masonry-inner h3 {\n  font-size: calc(var(--base-font-size) * 1.375);\n  letter-spacing: calc(var(--base-font-size) / -50);\n  line-height: 1.25;\n  margin-bottom: calc(var(--paragraph-margin-bottom) * 0.5);\n}\n@media (min-width: 576px) {\n  .masonry-inner h2,\n.masonry-inner h3 {\n    font-size: calc(var(--base-font-size) * 1.125);\n  }\n}\n@media (min-width: 1200px) {\n  .masonry-inner h2,\n.masonry-inner h3 {\n    font-size: var(--base-font-size);\n  }\n}\n\n.masonry-image {\n  height: 0;\n  margin: 0;\n  max-width: 100%;\n  overflow: hidden;\n  padding-top: 50%;\n  position: relative;\n}\n.masonry-image img {\n  box-shadow: none;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  width: 100%;\n}\n\n.masonry-body {\n  padding: var(--paragraph-margin-bottom) calc(var(--paragraph-margin-bottom) * 0.5);\n}\n\n.masonry-has-image .masonry-body {\n  padding: calc(var(--paragraph-margin-bottom) * 0.5) calc(var(--paragraph-margin-bottom) * 0.5) var(--paragraph-margin-bottom);\n}\n\n.plain-black .masonry-inner,\n.flora-black .masonry-inner {\n  background: var(--black);\n  color: rgba(var(--primary-rgb), 0.625);\n}\n.plain-black .masonry-image,\n.flora-black .masonry-image {\n  border: calc(var(--paragraph-margin-bottom) * 0.5) solid var(--black);\n}\n.plain-black h3,\n.flora-black h3 {\n  color: rgba(var(--primary-rgb), 0.875);\n}\n.plain-black a,\n.flora-black a {\n  border-bottom: 2px solid rgba(var(--primary-rgb), 0.25);\n  color: rgba(var(--primary-rgb), 0.875);\n}\n.plain-black a:hover,\n.flora-black a:hover {\n  border-bottom: 2px solid rgba(var(--primary-rgb), 0.75);\n  color: var(--primary);\n}\n\n.plain-yellow .masonry-inner,\n.flora-yellow .masonry-inner {\n  background: var(--primary);\n  color: var(--body-color);\n}\n.plain-yellow .masonry-image,\n.flora-yellow .masonry-image {\n  border: calc(var(--paragraph-margin-bottom) * 0.5) solid var(--primary);\n}\n.plain-yellow h3,\n.flora-yellow h3 {\n  color: rgba(var(--black-rgb), 0.75);\n}\n.plain-yellow a,\n.flora-yellow a {\n  border-bottom: 2px solid rgba(var(--black-rgb), 0.25);\n  color: rgba(var(--black-rgb), 0.875);\n}\n.plain-yellow a:hover,\n.flora-yellow a:hover {\n  border-bottom: 2px solid rgba(var(--black-rgb), 0.75);\n  color: var(--black);\n}\n\n.flora-black.masonry-has-image .masonry-inner,\n.flora-yellow.masonry-has-image .masonry-inner {\n  padding-top: calc(var(--paragraph-margin-bottom) * 0.5);\n}\n.flora-black .masonry-flora-crown,\n.flora-yellow .masonry-flora-crown {\n  background-color: transparent;\n  background-position: top center;\n  background-repeat: no-repeat;\n  background-size: 100%;\n  box-shadow: none;\n  padding-top: 1.5rem;\n  position: relative;\n  z-index: 2;\n}\n@media (min-width: 576px) {\n  .flora-black .masonry-flora-crown,\n.flora-yellow .masonry-flora-crown {\n    padding-top: 1rem;\n  }\n}\n.flora-black .masonry-inner,\n.flora-yellow .masonry-inner {\n  position: relative;\n  z-index: 1;\n}\n\n.flora-black .masonry-flora-crown {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' fill='%23000000' x='0px' y='0px' viewBox='0 0 288 18.68' style='enable-background:new 0 0 288 18.68;' xml:space='preserve'%3E%3Cpolygon points='0,18.68 0,10.65 13.96,10.65 17.28,7.26 20.04,10.65 34.56,10.65 34.56,17.53 69.12,17.53 69.12,10.65 83.08,10.65 86.4,7.26 89.16,10.65 103.68,10.65 126.72,5.56 126.72,3.39 140.68,3.39 144,0 146.76,3.39 161.28,3.39 161.28,5.56 184.32,10.65 198.28,10.65 201.6,7.26 204.35,10.65 218.88,10.65 218.88,17.53 253.44,17.53 253.44,10.65 267.4,10.65 270.72,7.26 273.47,10.65 288,10.65 288,18.68 '/%3E%3C/svg%3E\");\n}\n\n.flora-yellow .masonry-flora-crown {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' fill='%23fce409' x='0px' y='0px' viewBox='0 0 288 18.68' style='enable-background:new 0 0 288 18.68;' xml:space='preserve'%3E%3Cpolygon points='0,18.68 0,10.65 13.96,10.65 17.28,7.26 20.04,10.65 34.56,10.65 34.56,17.53 69.12,17.53 69.12,10.65 83.08,10.65 86.4,7.26 89.16,10.65 103.68,10.65 126.72,5.56 126.72,3.39 140.68,3.39 144,0 146.76,3.39 161.28,3.39 161.28,5.56 184.32,10.65 198.28,10.65 201.6,7.26 204.35,10.65 218.88,10.65 218.88,17.53 253.44,17.53 253.44,10.65 267.4,10.65 270.72,7.26 273.47,10.65 288,10.65 288,18.68 '/%3E%3C/svg%3E\");\n}","$grid-breakpoints: (\n    xs: 0,\n    sm: 576px,\n    md: 768px,\n    lg: 992px,\n    xl: 1200px\n);\n\n// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//        (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//        >> breakpoint-next(sm)\n//        md\n//        >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//        md\n//        >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//        md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n    $n: index($breakpoint-names, $name);\n    @if not $n {\n        @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n    }\n    @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//        >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//        576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n    $min: map-get($breakpoints, $name);\n    @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//        >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//        767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n    $max: map-get($breakpoints, $name);\n    @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//        >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//        \"\"    (Returns a blank string)\n//        >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//        \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n    @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($name, $breakpoints);\n    @if $min {\n        @media (min-width: $min) {\n            @content;\n        }\n    } @else {\n        @content;\n    }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n    $max: breakpoint-max($name, $breakpoints);\n    @if $max {\n        @media (max-width: $max) {\n            @content;\n        }\n    } @else {\n        @content;\n    }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($lower, $breakpoints);\n    $max: breakpoint-max($upper, $breakpoints);\n\n    @if $min != null and $max != null {\n        @media (min-width: $min) and (max-width: $max) {\n            @content;\n        }\n    } @else if $max == null {\n        @include media-breakpoint-up($lower, $breakpoints) {\n            @content;\n        }\n    } @else if $min == null {\n        @include media-breakpoint-down($upper, $breakpoints) {\n            @content;\n        }\n    }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n    $min: breakpoint-min($name, $breakpoints);\n    $max: breakpoint-max(breakpoint-next($name, $breakpoints));\n\n    @if $min != null and $max != null {\n        @media (min-width: $min) and (max-width: $max) {\n            @content;\n        }\n    } @else if $max == null {\n        @include media-breakpoint-up($name, $breakpoints) {\n            @content;\n        }\n    } @else if $min == null {\n        @include media-breakpoint-down($name, $breakpoints) {\n            @content;\n        }\n    }\n}"]}